version: "2.4"
services:
  mysql:
    image: percona:latest
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    volumes:
      - spaceage_mysql:/var/lib/mysql
  php:
    image: ghcr.io/spaceagemp/docker/php:latest
    restart: always
    links:
      - mysql:mysql
    volumes:
      - spaceage_wwwroot:/var/www
  tts:
    image: ghcr.io/spaceagemp/tts/tts:latest
    init: yes
    restart: always
    environment:
      AWS_REGION: ${TTS_AWS_REGION}
      AWS_ACCESS_KEY_ID: ${TTS_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${TTS_AWS_SECRET_ACCESS_KEY}
  api:
    image: ghcr.io/spaceagemp/space_age_api/api
    restart: always
    init: yes
    environment:
      DATABASE_URL: ${API_DATABASE_URL}
      SECRET_KEY_BASE: ${API_SECRET_KEY_BASE}
      SENTRY_DSN_SRCDS: ${API_SENTRY_DSN_SRCDS}
      SENTRY_DSN_API: ${API_SENTRY_DSN_API}
      MIX_ENV: prod
  nginx:
    image: ghcr.io/spaceagemp/docker/nginx:latest
    restart: always
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    environment:
      DDNS_URL_IPV6: ${NGINX_DDNS_URL_IPV6}
    volumes:
      - spaceage_wwwroot:/var/www
      - spaceage_ssl:/etc/nginx/ssl
    links:
      - php:php
      - tts:tts
      - api:api
  gmod:
    image: ghcr.io/spaceagemp/docker/gmod:latest
    restart: always
    volumes:
      - spaceage_server:/home/server

volumes:
  spaceage_wwwroot:
    external: true
  spaceage_mysql:
    external: true
  spaceage_ssl:
    external: true
  spaceage_server:
    external: true
