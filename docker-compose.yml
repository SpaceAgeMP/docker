services:
  mysql:
    image: percona:latest
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    volumes:
      - mysql:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    healthcheck:
      test: 'mysqladmin status >/dev/null || exit 1'
      interval: 60s
      timeout: 10s
  tts:
    image: ghcr.io/spaceagemp/tts/tts:latest
    init: true
    restart: always
    environment:
      AWS_REGION: ${TTS_AWS_REGION}
      AWS_ACCESS_KEY_ID: ${TTS_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${TTS_AWS_SECRET_ACCESS_KEY}
    healthcheck:
      test: 'curl -s -f "http://$${HOSTNAME}:4001/health" >/dev/null || exit 1'
      interval: 60s
      timeout: 10s
  api:
    image: ghcr.io/spaceagemp/space_age_api/api:latest
    restart: always
    init: true
    environment:
      DATABASE_URL: ${API_DATABASE_URL}
      SECRET_KEY_BASE: ${API_SECRET_KEY_BASE}
      SENTRY_DSN_SRCDS: ${API_SENTRY_DSN_SRCDS}
      SENTRY_DSN_API: ${API_SENTRY_DSN_API}
      MIX_ENV: prod
    healthcheck:
      test: 'curl -s -f "http://$${HOSTNAME}:4000/v2/health" >/dev/null || exit 1'
      interval: 60s
      timeout: 10s
  nginx:
    build: nginx
    restart: always
    #ports:
    #  - 80:80
    #  - 443:443
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    volumes:
      - ssl:/etc/letsencrypt
    links:
      - php:php
      - tts:tts
      - api:api
    healthcheck:
      test: 'curl -s -f -H "Host: static.spaceage.mp" --insecure "https://$${HOSTNAME}/loadingurl/" >/dev/null || exit 1'
      interval: 60s
      timeout: 10s
  gmod:
    build: gmod
    restart: always
    #ports:
    #  - 27015:27015
    #  - 27015:27015/udp
    volumes:
      - server:/home/server

volumes:
  mysql: {}
  mysql_logs: {}
  ssl: {}
  server: {}
